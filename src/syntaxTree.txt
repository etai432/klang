statements are the building blocks of a program. example for a statement is If statement
program => declaration* EOF ;
declaration => varDecl | fnDecl | statement ;
fnDecl => fn function ;
function => identifier "(" parameters? ")" block ;
parameters => identifier ("," identifier)* ;
varDecl => let Identifier ":" type ("=" expression)? ";" ;
statement => exprStmt | printStmt | block | ifStmt | whileStmt | forStmt | returnStmt ;
returnStmt => "return" expression ";" ;
forStmt => "for" identifier "in" Iterable block ;
whileStmt => "while" "(" expression ")" block ;
ifStmt => "if" "(" expression ")" block ("else" block)? ;
block => "{" declaration "}" ;
printStmt => "print" "(" " string " ")" ;
exprStmt => expression ";" ;

expressions are the simplest blocks of codes, those are the lines you see that end with ;
expression => range;
range => unary".."unary(".."unary)? | assignment;
assignment => IDENTIFIER "=" assignment | logical ;
logical => equality ( ("&&" | "||") equality )* ;

equality => comparison ( ( "!=" | "==" ) comparison )* ;
comparison => term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term => factor ( ( "-" | "+" ) factor )* ;
factor => unary ( ( "/" | "*" ) unary )* ;
unary => ( "!" | "-" ) unary | call ;
call => primary ( "(" arguments? ")" )* ;
arguments => expression ( "," expression )* ;
primary => Value | "(" logic_or ")" | identifier ;

type => INT | FLOAT | BOOL | STRING
Iterable => Int..Int | Int..Int..Int | iterable type (yet to be made)